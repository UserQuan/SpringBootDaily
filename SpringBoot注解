1. SpringBoot 中常用注解
@Controller/@RestController/@RequestMapping
1.1 @Controller 处理http请求

@Controller
public class HelloController {

    @RequestMapping(value="/hello",method= RequestMethod.GET)
    public String sayHello(){
        return "hello";
    }
}

1.2 @RestController
Spring4之后新加入的注解，原来返回json需要@ResponseBody和@Controller配合。
即@RestController是@ResponseBody和@Controller的组合注解。

@RestController
public class HelloController {
    @RequestMapping(value="/hello",method= RequestMethod.GET)
    public String sayHello(){
        return "hello";
    }
}

1.3 @RequestMapping 配置url映射
@RequestMapping此注解即可以作用在控制器的某个方法上，也可以作用在此控制器类上；@RequestMapping中的method参数有很多中选择，一般使用get/post.
当控制器在类级别上添加@RequestMapping注解时，这个注解会应用到控制器的所有处理器方法上。处理器方法上的@RequestMapping注解会对类级别上的@RequestMapping的声明进行补充。
看两个例子：
例子一：@RequestMapping仅作用在处理器方法上
@RestController
public class HelloController {
    @RequestMapping(value="/hello",method= RequestMethod.GET)
    public String sayHello(){
        return "hello";
    }
}
以上代码sayHello所响应的url=localhost:8080/hello

例子三：@RequestMapping作用在类级别和处理器方法上

@RestController
@RequestMapping("/hello")
public class HelloController {
    @RequestMapping(value="/sayHello",method= RequestMethod.GET)
    public String sayHello(){
        return "hello";
    }
    @RequestMapping(value="/sayHi",method= RequestMethod.GET)
    public String sayHi(){
        return "hi";
    }
}
这样，以上代码中的sayHello所响应的url=localhost:8080/hello/sayHello，
                  sayHi所响应的url=localhost:8080/hello/sayHi。













